import Link from "next/link";
import { safeGetJSON } from "./lib/safe";

type Property = {
  id: string;
  city?: string;
  title?: string;
  pricePerToken?: number;
  availableTokens?: number;
  image?: string;
};

function t(lang: "en" | "fr", key: string) {
  const dict: Record<string, Record<string, string>> = {
    en: {
      heroTitle: "Tokenized access to African real estate.",
      heroSubtitle: "Invest from $50 per token. Focus: Kinshasa & Luanda.",
      ctaView: "View properties",
      ctaLearn: "Learn more",
      listed: "listed",
      price: "Token price",
      available: "Available",
      view: "View",
      buy: "Buy",
      pledge: "Read our Investor Pledge",
    },
    fr: {
      heroTitle: "Accès tokenisé à l’immobilier africain.",
      heroSubtitle: "Investissez dès 50 $ par token. Focus : Kinshasa & Luanda.",
      ctaView: "Voir les biens",
      ctaLearn: "En savoir plus",
      listed: "listé(s)",
      price: "Prix du token",
      available: "Disponible",
      view: "Voir",
      buy: "Acheter",
      pledge: "Lire notre Engagement Investisseur",
    },
  };
  return dict[lang]?.[key] ?? key;
}

async function getProps(): Promise<Property[]> {
  const base = process.env.NEXT_PUBLIC_BACKEND?.replace(/\/+$/, "") ?? "";
  const url = base ? `${base}/properties` : "";
  if (!url) {
    return [
      { id: "kin-001", city: "Kinshasa — Gombe Apartments", title: "ID: kin-001", pricePerToken: 50, availableTokens: 4997, image: "/images/kinshasa-nsele.jpg" },
      { id: "lua-001", city: "Luanda — Ilha Offices", title: "ID: lua-001", pricePerToken: 50, availableTokens: 3000, image: "/images/luanda-ilha.jpg" },
    ];
  }
  const res = await safeGetJSON<any>(url, { timeoutMs: 6000 });
  const items: any[] = Array.isArray(res.data) ? res.data : (res.data?.value ?? []);
  if (!res.ok || !items?.length) {
    return [
      { id: "kin-001", city: "Kinshasa — Gombe Apartments", title: "ID: kin-001", pricePerToken: 50, availableTokens: 4997, image: "/images/kinshasa-nsele.jpg" },
      { id: "lua-001", city: "Luanda — Ilha Offices", title: "ID: lua-001", pricePerToken: 50, availableTokens: 3000, image: "/images/luanda-ilha.jpg" },
    ];
  }
  return items.map((p: any) => ({
    id: String(p.id ?? ""),
    city: String(p.city ?? p.name ?? "Unknown location"),
    title: String(p.title ?? `ID: ${p.id ?? "n/a"}`),
    pricePerToken: Number(p.pricePerToken ?? p.tokenPrice ?? 50),
    availableTokens: Number(p.availableTokens ?? 0),
    image: p.image ?? (String(p.id ?? "").startsWith("kin") ? "/images/kinshasa-nsele.jpg" : "/images/luanda-ilha.jpg"),
  })).filter((p: Property) => p.id);
}

export default async function Home({ searchParams }: { searchParams: { lang?: string } }) {
  const lang = (searchParams?.lang === "fr" ? "fr" : "en") as "en" | "fr";
  const props = await getProps();

  return (
    <main className="mx-auto max-w-5xl px-6 py-8 space-y-10">
      {/* Header */}
      <header className="flex items-center justify-between">
        <Link href="/" className="flex items-center gap-3">
          <img src="/logo.svg" alt="Optiloves Invest Logo" className="h-9 w-auto" />
          <span className="font-semibold text-lg hidden sm:block">Optiloves Invest</span>
        </Link>
        <nav className="flex items-center gap-4 text-sm">
          <Link href="/properties" className="hover:underline">Properties</Link>
          <Link href="/learn" className="hover:underline">Learn</Link>
          <Link href="/kyc" className="hover:underline">KYC</Link>
          <Link href={lang === "en" ? "?lang=fr" : "?lang=en"} className="rounded px-2 py-1 border">
            {lang.toUpperCase()}
          </Link>
        </nav>
      </header>

      {/* Hero */}
      <section className="rounded-2xl p-8 md:p-12 bg-gray-50 border">
        <div className="flex flex-col md:flex-row items-start md:items-center gap-8">
          <img src="/logo-badge.png" alt="Optiloves badge" className="h-16 w-16 rounded-full border" />
          <div className="space-y-2">
            <h1 className="text-2xl md:text-3xl font-bold">{t(lang, "heroTitle")}</h1>
            <p className="text-gray-600">{t(lang, "heroSubtitle")}</p>
            <div className="flex gap-3 pt-2">
              <Link href="/properties" className="rounded-xl px-4 py-2 bg-black text-white">{t(lang, "ctaView")}</Link>
              <Link href="/learn" className="rounded-xl px-4 py-2 border">{t(lang, "ctaLearn")}</Link>
            </div>
            <div className="pt-3">
              <Link href="/pledge" className="text-sm underline">{t(lang, "pledge")}</Link>
            </div>
          </div>
        </div>
      </section>

      {/* Properties */}
      <section className="space-y-3">
        <div className="flex items-baseline justify-between">
          <h2 className="text-xl font-semibold">Properties</h2>
          <Link href="/properties" className="text-sm underline">See all</Link>
        </div>
        <p className="text-sm text-gray-500">{props.length} {t(lang, "listed")}</p>

        <div className="grid md:grid-cols-2 gap-6">
          {props.map(p => (
            <div key={p.id} className="border rounded-2xl overflow-hidden bg-white">
              <img src={p.image ?? "/images/property-placeholder.jpg"} alt={p.city ?? "Property"} className="w-full h-44 object-cover" />
              <div className="p-5 space-y-2">
                <h3 className="font-medium">{p.city}</h3>
                <p className="text-sm text-gray-600">{p.title}</p>
                <div className="grid grid-cols-2 gap-3 text-sm pt-2">
                  <div className="rounded-lg border p-3">
                    <div className="text-gray-500">{t(lang,"price")}</div>
                    <div className="font-semibold">${(p.pricePerToken ?? 50).toLocaleString()}</div>
                  </div>
                  <div className="rounded-lg border p-3">
                    <div className="text-gray-500">{t(lang,"available")}</div>
                    <div className="font-semibold">{(p.availableTokens ?? 0).toLocaleString()} tokens</div>
                  </div>
                </div>
                <div className="flex gap-3 pt-3">
                  <Link href={`/property/${p.id}`} className="rounded-lg px-4 py-2 border">{t(lang,"view")}</Link>
                  <Link href={`/property/${p.id}?action=buy`} className="rounded-lg px-4 py-2 bg-black text-white">{t(lang,"buy")}</Link>
                </div>
              </div>
            </div>
          ))}
        </div>
      </section>

      {/* Footer */}
      <footer className="text-xs text-gray-500 py-6">
        <div className="flex flex-col sm:flex-row sm:items-center justify-between gap-3">
          <div>© 2025 Optiloves Invest</div>
          <div className="flex gap-4">
            <Link href="/terms" className="hover:underline">Terms</Link>
            <Link href="/privacy" className="hover:underline">Privacy</Link>
            <Link href="/contact" className="hover:underline">Contact</Link>
          </div>
        </div>
        <div className="pt-2">FIGHTING POVERTY WITH LOVE AND INVESTMENT</div>
      </footer>
    </main>
  );
}