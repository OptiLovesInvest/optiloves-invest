import { NextResponse, NextRequest } from "next/server";

const PROTECT_PATH = process.env.PROTECT_PATH || "/*";
const user = process.env.ADMIN_USER || "";
const pass = process.env.ADMIN_PASS || "";

export function middleware(req: NextRequest) {
  const url = req.nextUrl;
  // Match using URLPattern
  // @ts-ignore - URLPattern is available at runtime
  const protect = new URLPattern({ pathname: PROTECT_PATH });
  // @ts-ignore
  if (!protect.test(url)) return NextResponse.next();

  const auth = req.headers.get("authorization") || "";
  const expected = "Basic " + Buffer.from(`${user}:${pass}`).toString("base64");
  if (auth === expected) return NextResponse.next();

  return new NextResponse("Auth required", {
    status: 401,
    headers: { "WWW-Authenticate": 'Basic realm="Optiloves"' },
  });
}

export const config = { matcher: ["/((?!_next|static|favicon.ico).*)"] };
